- hosts: "masters"
  become: yes
  tasks:

    - name: Ensure the registry mirror configuration exists
      lineinfile:
        path: /etc/containerd/config.toml
        insertafter: '\[plugins."io.containerd.grpc.v1.cri".registry.mirrors\]'
        line: '[plugins."io.containerd.grpc.v1.cri".registry.mirrors."10.210.12.195:5022"]'

    - name: Insert the endpoint line
      lineinfile:
        path: /etc/containerd/config.toml
        insertafter: '\[plugins."io.containerd.grpc.v1.cri".registry.mirrors."10.210.12.195:5022"\]'
        line: '  endpoint = ["http://10.210.12.195:5022"]'

    - name: Add content to daemon.json
      template:
        src: daemon.json.j2
        dest: /etc/docker/daemon.json
      become: yes

    - name: start docker
      shell: systemctl start docker

    - name: chmod docker.sock
      shell: sudo chmod 777 /var/run/docker.sock

    - name: Configure containerd to access private docker registry
      blockinfile:
        path: /etc/containerd/config.toml
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        insertafter: '[plugins."io.containerd.grpc.v1.cri".registry.mirrors]'
        block: |
          [plugins."io.containerd.grpc.v1.cri".registry.mirrors."10.210.12.195:5022"]
            endpoint = ["http://10.210.12.195:5022"]

    - name: initialize the cluster
      shell: kubeadm init 
      args:
        chdir: $HOME
        creates: cluster_initialized.txt

    - name: create .kube directory
      become: yes
      become_user: "{{ userName }}"
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    - name: copies admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ userName }}/.kube/config
        remote_src: yes
        owner: "{{ userName }}"

    - name: change ownership
      become: yes
      become_user: "{{ userName }}"
      shell: chown $(id -u):$(id -g) $HOME/.kube/config

    - name: Give permission to admin.conf inside /etc/kubernetes
      shell: sudo chmod +r /etc/kubernetes/admin.conf

    # # - name: Copy ubfagent to remote.
    # #   become: yes
    # #   become_user: "{{ userName }}"
    # #   copy:
    # #     src: /home/akash/MYWORK/k8s_ansible/weave-daemonset-k8s.yaml
    # #     dest: "~/"
    # #     mode: 0774

    - name: install wave network
      become: yes
      become_user: "{{ userName }}"
      #shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml 
      #shell: kubectl apply -f ~/weave-daemonset-k8s.yaml
      shell: kubectl apply -f "https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml"
      args:
        chdir: $HOME
        
    - name: Get the token for joining the worker nodes
      become: yes
      become_user: "{{ userName }}"
      shell: kubeadm token create  --print-join-command
      register: kubernetes_join_command

    - debug:
        msg: "{{ kubernetes_join_command.stdout }}"
        # var: kubernetes_join_command.stdout_lines

    - name: Copy join command to local file.
      become: false
      local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777
      # copy: content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777
